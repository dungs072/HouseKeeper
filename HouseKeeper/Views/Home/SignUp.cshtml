@using HouseKeeper.Models.Views.OutPage;
@model SignUpViewModels;
<html lang="en">
<head>
    
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern Login / Sign up Form Fully Responsive</title>

    <meta name="author" content="Untree.co">
    <link rel="shortcut icon" href="favicon.png">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="/css/style1.css">

    <partial name="HeaderInclude" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/js/select2.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const employerCheckbox = $('#IsEmployer[value|="True"]');
            const employeeCheckbox = $('#IsEmployer[value|="False"]');
            const employeeFields = $('#employeeFields');
            const employerFields = $('#employerFields');


            function setField(isEmployer) {
                console.log(isEmployer)
                employerFieldsInput = employerFields.find('input')
                employeeFieldsInput = employeeFields.find('input')
                employerFields.css('display', (isEmployer == "True") ? "block" : "none");
                employerFieldsInput.each(function () {
                    console.log(this)
                    $(this).prop('required', (isEmployer == "True") ? true : false);
                })
                
                employeeFields.css('display', (isEmployer == "True") ? "none" : "block");
                employeeFieldsInput.each(function () {
                    $(this).prop('required', (isEmployer == "True") ? false : true);
                })

            }
            employerCheckbox.prop('checked', true)
            setField(employerCheckbox.val());


            employerCheckbox.on('change', function () {
                setField(employerCheckbox.val())
            });

            employeeCheckbox.on('change', function () {
                setField(employeeCheckbox.val())
            });
           
        });
    </script>


  @*   <script>
        window.addEventListener("load", function () {
            var isEmployer = '@Model.IsEmployer'.toString();
            if (isEmployer=="True") {
                const employeeFields = document.getElementById('employeeFields');
                const employerFields = document.getElementById('employerFields');
                employeeFields.style.display = 'none';
                employerFields.style.display = 'block';
            }

            var isEmployee = '@Model.IsEmployee'.toString();
            if (isEmployee == "True") {
                const employeeFields = document.getElementById('employeeFields');
                const employerFields = document.getElementById('employerFields');
                employeeFields.style.display = 'block';
                employerFields.style.display = 'none';
            }
        });
    </script> *@
    <script>
        $(document).ready(function () {
            $('#cityOrProvince').select();
            $('#Gender[value |= "male"]').prop('checked', true)
        });
    </script>
    <style>
        input#Gender {
            margin: 3px;
        }
        
        input#IsEmployer {
            margin: 3px;
        }

        .gender-group {
            display: inline-flex;
        }
    </style>
</head>
<body>
    <partial name="BodyInclude" />
    
    <div class="site-wrap d-md-flex align-items-stretch">
        <div class="bg-img" style="background-image: url('/images/house-keeper.jpg')"></div>
        <div class="form-wrap">
            <div class="form-inner">
                <h1 class="title">Sign up</h1>
                <p class="caption mb-4">Create your account in seconds.</p>

                <form form asp-action="HandleSignUp" method="post" enctype="multipart/form-data" class="pt-3">

                    <div class="form-floating">
                        <input asp-for="LastName" type="text" class="form-control" id="lastName" placeholder="Last Name"
                               pattern="[A-Za-z ]+" title="Last name contains letters and spaces only" value=@Model.LastName maxlength="50" required>
                        <label for="name">Last Name</label>
                    </div>
                    <div class="form-floating">
                        <input asp-for="FirstName" type="text" class="form-control" id="firstName" placeholder="First Name" 
                               pattern="[A-Za-z]+" title="First name contains letters only" value=@Model.FirstName  maxlength="20" required>
                        <label for="name">First Name</label>
                    </div>
                    <div class="form-floating">
                        <input asp-for="PhoneNumber" type="text" class="form-control" id="phone" placeholder="023-456-7890"
                               pattern="[0][35789][0-9]{8}" title="Please use Vietnamese phone number format" value="@Model.PhoneNumber" minLength="10"
                                maxlength="10" required>
                        <label for="phone">Phone Number</label>
                    </div>

                    <div class="form-floating">
                        <input asp-for="Gmail" type="email" class="form-control" id="email" placeholder="info@example.com" value=@Model.Gmail maxlength="64"
                               pattern="[a-z0-9._%+\-]+@@[a-z0-9.\-]+\.[a-z]{2,}$" title="Please enter the right format of gmail">
                        <label for="email">Email Address (not required)</label>
                    </div>

                    <div class="form-floating">
                        <select class="form-select" id="cityOrProvince" name="cityOrProvince" required>
                            @foreach (var city in Model.Cities)
                            {
                                <option value="@city.CityId">@city.CityName</option>
                            }

                            <!-- Add more options for other cities or provinces -->
                        </select>
                        <label for="cityOrProvince">City or Province</label>
                    </div>

                    <div class="form-floating">
                        <input id="districtInput" type="hidden" asp-for="@Model.DistrictId"/>
                        <select class="form-select" id="district" name="district" required>
                            @foreach (var district in Model.Districts)
                            {
                                <option value="@district.DistrictId" data-cityid="@district.City.CityId">@district.DistrictName</option>
                            }

                        </select>
                        <label for="district">District</label>
                    </div>

                    <div class="form-floating">
                        <input asp-for="Address" type="text" class="form-control" id="address" placeholder="Address" value=@Model.Address required>
                        <label for="address">Address</label>
                    </div>


                    <div class="form-floating">
                        <input asp-for="CitizenNumber" type="text" class="form-control" id="citizenNumber" placeholder="Citizen Number"
                               pattern="[0][0-9]{11}" title="Please enter the right citizen number format in VietNam" value=@Model.CitizenNumber minLength="12" maxlength="12" required>
                        <label for="citizenNumber">Citizen Number</label>
                    </div>

                    <div class="nice-form-group">
                        <label>Front Identity Image</label>
                        <img id="frontImage" width="70%" height="360" src="@Model.FrontImage" alt="Front Id Card" />
                        <input id="frontImageButton" name="frontImage" class="form-control" type="file" accept="image/*" required/>
                    </div>

                    <div class="nice-form-group">
                        <label>Back Identity Image</label>
                        <img id="backImage" width="70%" height="360" src="@Model.BackImage" alt="Back Id Card" />
                        <input id="backImageButton" name="backImage" class="form-control" type="file" accept="image/*" required />
                    </div>

                    <div class="form-floating">
                        <span class="password-show-toggle js-password-show-toggle"><span class="uil"></span></span>
                        <input asp-for="Password" type="password" class="form-control" id="password" placeholder="Password" minValue ="3" maxlength="40" value="@Model.Password" required>
                        <label for="password">Password</label>
                    </div>
                    <div class="form-floating">
                        <span class="password-show-toggle js-confirm-password-show-toggle"><span class="uil"></span></span>
                        <input asp-for="ConfirmedPassword" type="password" class="form-control" id="confirm_password" placeholder="Confirm Password" minValue="3" maxlength="40" value=@Model.ConfirmedPassword required>
                        <label for="confirm_password">Confirm Password</label>
                    </div>

                    <div class="form-floating is-employer-group">
                        <span for="isEmployer">Your Job: </span>
                        <div>
                            @Html.RadioButtonFor(model => model.IsEmployer, true)@Html.Label("Employer")
                            @Html.RadioButtonFor(model => model.IsEmployer, false)@Html.Label("Employee")
                        </div>

                    </div>
                   
                    @* <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="isEmployer" , name="isEmployer" @(Model.IsEmployer ? "checked" : "")>
                        <label for="employer" class="form-check-label">I'm an Employer</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="isEmployee" , name="isEmployee" @(Model.IsEmployee ? "checked" : "")>
                        <label for="employee" class="form-check-label">I'm an Employee</label>
                    </div> *@

                    @* <div id="employerFields" style="display: none;">
                        <!-- Employer specific fields go here -->
                        <div class="form-floating">
                            <input type="text" class="form-control" id="address" placeholder="Address" required><!-- Note: Placeholder should be empty or a space for floating label -->
                            <label for="address">Address</label>
                        </div>
                    </div> *@

                    <div id="employeeFields" style="display: none;">
                        <!-- Employee specific fields go here -->
                        <div class="form-floating">
                            <input asp-for="BirthDate" type="date" class="form-control" id="birthdate" placeholder=" " value="@Model.BirthDate" required>
                            <label for="birthdate">Birthdate</label>
                        </div>

                        
                        <div class="form-floating gender-group">
                            <span for="gender">Gender: </span>
                            <div>
                                @Html.RadioButtonFor(model => model.Gender, "male")@Html.Label("Male")
                                @Html.RadioButtonFor(model => model.Gender, "female")@Html.Label("Female")
                            </div>
                        </div>
                    
                        @* <div class="form-floating">
                            <select class="form-select" id="cityOrProvince" name="cityOrProvince">
                                @foreach(var city in Model.Cities)
                                {
                                    <option value="@city.CityId">@city.CityName</option>
                                }
                               
                                <!-- Add more options for other cities or provinces -->
                            </select>
                            <label for="cityOrProvince">City or Province</label>
                        </div> *@
                    </div>
                  

                    <div class="d-flex justify-content-between">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="remember", name="remember" required>
                            <label for="remember" class="form-check-label">I agree to the <a href="@Url.Action("TermConditions", "Home")">Terms of Service</a> and <a href="@Url.Action("Privacy", "Home")">Privacy Policy</a></label>
                        </div>
                    </div>

                    <div class="d-grid mb-4">
                        <button type="submit" class="btn btn-primary">Create an account</button>
                    </div>

                    <div class="mb-2">Already a member? <a href="@Url.Action("Login", "Home")">Log in</a></div>

                  @*   <div class="social-account-wrap">
                        <h4 class="mb-4"><span>or continue with</span></h4>
                        <ul class="list-unstyled social-account d-flex justify-content-between">
                            <li><a href="#"><img src="/images/icon-google.svg" alt="Google logo"></a></li>
                            <li><a href="#"><img src="/images/icon-facebook.svg" alt="Facebook logo"></a></li>
                            <li><a href="#"><img src="/images/icon-apple.svg" alt="Apple logo"></a></li>
                            <li><a href="#"><img src="/images/icon-twitter.svg" alt="Twitter logo"></a></li>
                        </ul>
                    </div> *@

                </form>
            </div>
        </div>
    </div>

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="/js/custom.js"></script>


    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>

    <script>
        // Get references to both select elements
        var citySelect = document.getElementById('cityOrProvince');
        var districtSelect = document.getElementById('district');

        // Store all district options in an array
        var districtOptions = Array.from(districtSelect.options);

        // Add event listener to city select element
        citySelect.addEventListener('change', function () {
            var selectedCityId = this.value;

            // Remove all options from district select
            districtSelect.innerHTML = '';

            // Filter and append district options corresponding to the selected city
            districtOptions.forEach(function (option) {
                if (option.getAttribute('data-cityid') === selectedCityId || option.getAttribute('data-cityid') === null) {
                    districtSelect.appendChild(option.cloneNode(true));
                }
            });
        });

        // Trigger change event initially to set the initial state
        citySelect.dispatchEvent(new Event('change'));
    </script>

    <script>
        document.getElementById('frontImageButton').addEventListener('change', function () {
            var file = this.files[0];
            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('frontImage').src = e.target.result;
            }
            reader.readAsDataURL(file);
        });

        document.getElementById('backImageButton').addEventListener('change', function () {
            var file = this.files[0];
            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('backImage').src = e.target.result;
            }
            reader.readAsDataURL(file);
        });
    </script>

    <script>
        districtSelect.addEventListener('change', function () {
            var selectedDistrictId = this.value;

            // Set the hidden input value to the selected district id
            document.getElementById('districtInput').value = selectedDistrictId;
        });
        districtSelect.dispatchEvent(new Event('change'));
    </script>
</body>
</html>
