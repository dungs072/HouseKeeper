@using HouseKeeper.Models.Views.Recruitments;
@model EditRecruitmentViewModel;
<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Website</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="~/css/Input.css">
    <style>
        /* Styling for the multi-select ComboBox */
        .multiselect {
            width: 200px;
            height: auto;
            overflow-y: auto;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 5px;
        }

            .multiselect select {
                width: 100%;
                height: 100%;
                padding: 5px;
                font-size: 16px;
                border: none;
                outline: none;
            }

                .multiselect select option {
                    padding: 5px;
                }

        /* Styling for the selected items */
        .selected-items {
            margin-top: 10px;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 100%; /* Expand to fill available space */
            display: flex; /* Change to flex container */
            flex-wrap: wrap; /* Wrap items if they overflow */
        }

            .selected-items div {
                margin-right: 5px; /* Add spacing between items */
                padding: 3px 5px;
                background-color: #f0f0f0;
                border-radius: 3px;
            }
    </style>
    <partial name="HeaderInclude" />
</head>

<body>
    <partial name="BodyInclude" />
    <div class="demo-page">
        <main class="demo-page-content">
            <section>
                <div class="href-target" id="input-types"></div>
                <h1>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="feather feather-align-justify">
                        <line x1="21" y1="10" x2="3" y2="10" />
                        <line x1="21" y1="6" x2="3" y2="6" />
                        <line x1="21" y1="14" x2="3" y2="14" />
                        <line x1="21" y1="18" x2="3" y2="18" />
                    </svg>
                    Edit your recruitment
                </h1>
                <p>Your recruitment form</p>
                <form asp-action="EditRecruitment" method="post" enctype="multipart/form-data" class="pt-1">
                    <fieldset class="nice-form-group">
                        <div class="nice-form-group">
                            <input type="radio" name="isFullTime" id="isFullTime" @(Model.IsFulltime ? "checked" : "") />
                            <label for="r-1">Full time</label>
                        </div>
                        <div class="nice-form-group">
                            <input type="radio" name="isFullTime" id="r-2" @(!Model.IsFulltime ? "checked" : "") />
                            <label for="r-2">Part time</label>
                        </div>
                    </fieldset>
                    <div class="nice-form-group same-row" style="display:none">
                        <label>ID recruitment</label>
                        <input name="RecruitmentId" id="RecruitmentId" type="number" value=@Model.RecruitmentId />
                    </div>
                    <div class="nice-form-group same-row">
                        <label>Min Salary (x1000 Dong)</label>
                        <input asp-for="MinSalary" id="min-salary" type="number" placeholder="1234" min="1" value=@Model.MinSalary />
                    </div>
                    <div class="nice-form-group same-row">
                        <label>Max Salary (x1000 Dong)</label>
                        <input asp-for="MaxSalary" id="max-salary" type="number" placeholder="4321" value=@Model.MaxSalary />
                    </div>
                    <div class="nice-form-group">
                        <label>Gender</label>
                        <select name="Gender" asp-for="Gender">
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Null">Not require</option>
                        </select>
                    </div>
                    <div class="nice-form-group">
                        <label>Number of vacancies</label>
                        <input asp-for="NumberVacancies" type="number" placeholder="1" min="1" value=@Model.NumberVacancies />
                    </div>
                    <div class="nice-form-group">
                        <div class="nice-form-group same-row">
                            <label>Min Age</label>
                            <input id="min-age" name="min-age" type="number" placeholder="18" min="18"  required />
                        </div>
                        <div class="nice-form-group same-row">
                            <label>Max Age</label>
                            <input id="max-age" name="max-age" type="number" placeholder="100" max="100" required />
                        </div>
                    </div>
                    <div class="nice-form-group">
                        <label>Type of works</label>
                       @*  <div class="multiselect">
                            <select name="selectedJobs" asp-items="@Model.SelectedJobs.Select(job => new SelectListItem { Value = job.JobId.ToString(), Text = job.JobName })" multiple required>
                                @foreach (var job in Model.jobs)
                                {
                                    <option value="@job.JobId">@job.JobName</option>
                                }
                            </select>
                        </div> *@
                        <div class="selected-items">
                            @foreach(var job in Model.SelectedJobs)
                            {
                                <div>
                                    @job.JobName
                                </div>
                            }
                            <!-- Selected items will appear here -->
                        </div>
                    </div>
                    <div class="nice-form-group">
                        <label>Type of paying</label>
                        <select name="PaidTypeId" asp-for="PaidTypeId">
                            @foreach (var pay in Model.PaidTypes)
                            {
                                <option value="@pay.SalaryFormId">@pay.SalaryFormName</option>
                            }
                        </select>
                    </div>
                    <div class="nice-form-group">
                        <label>Experience</label>
                        <select name="ExperienceId" asp-for="ExperienceId">
                            @foreach (var experience in Model.Experiences)
                            {
                                <option value="@experience.ExperienceId">@experience.ExperienceName</option>
                            }
                        </select>
                    </div>
                    <div class="nice-form-group">
                        <label>City/Province</label>
                        <select name="CityId" asp-for="CityId">
                            @foreach (var city in Model.Cities)
                            {
                                <option value="@city.CityId">@city.CityName</option>
                            }
                        </select>
                    </div>
                    <div class="nice-form-group">
                        <label>Addition</label>
                        <textarea asp-for="TakeNotes" rows="5" placeholder="Write something" required></textarea>
                    </div>
                    <div class="mt-2 button-container">
                        <a href="@Url.Action("IndexEmployer", "Home")" class="btn btn-danger">Cancel</a>
                        <button type="submit" class="btn btn-success">Update</button>
                    </div>

                </form>
            </section>
            <footer>Easy-Fast-Afordable</footer>
        </main>
    </div>
    <script>
        // JavaScript to handle selection change
        const select = document.querySelector('.multiselect select');
        const selectedItemsContainer = document.querySelector('.selected-items');

        select.addEventListener('change', function () {
            selectedItemsContainer.innerHTML = ''; // Clear previous selected items
            const selectedOptions = Array.from(select.selectedOptions);
            selectedOptions.forEach(option => {
                const item = document.createElement('div');
                item.textContent = option.textContent;
                selectedItemsContainer.appendChild(item);
            });
        });
    </script>

    <script>
        const minAgeInput = document.getElementById('min-age');
        const maxAgeInput = document.getElementById('max-age');

        minAgeInput.addEventListener('change', function () {
            if (parseInt(minAgeInput.value) >= parseInt(maxAgeInput.value)) {
                minAgeInput.value = parseInt(maxAgeInput.value) - 1;
            }
        });

        maxAgeInput.addEventListener('change', function () {
            if (parseInt(maxAgeInput.value) <= parseInt(minAgeInput.value)) {
                maxAgeInput.value = parseInt(minAgeInput.value) + 1;
            }
        });
    </script>

    <script>
        const minSalaryInput = document.getElementById('min-salary');
        const maxSalaryInput = document.getElementById('max-salary');

        minSalaryInput.addEventListener('change', function () {
            if (parseInt(minSalaryInput.value) >= parseInt(maxSalaryInput.value)) {
                minSalaryInput.value = parseInt(maxSalaryInput.value) - 1;
            }
        });

        maxSalaryInput.addEventListener('change', function () {
            if (parseInt(maxSalaryInput.value) <= parseInt(minSalaryInput.value)) {
                maxSalaryInput.value = parseInt(minSalaryInput.value) + 1;
            }
        });
    </script>
    <script>
        // Get the input element by its ID
        var inputMinAgeElement = document.getElementById("min-age");
        var inputMaxAgeElement = document.getElementById("max-age");
        var valueFromString = '@Model.AgeRange';
        var minAge = parseInt(valueFromString.split('-')[0]);
        var maxAge = parseInt(valueFromString.split('-')[1]);
        inputMinAgeElement.value = minAge;
        inputMaxAgeElement.value = maxAge;
    </script>
</body>
</html>

