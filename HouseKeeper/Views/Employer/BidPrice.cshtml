@using HouseKeeper.Models.Views.Employer;
@model PriceTagViewModel;
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Bid Price Setting</title>
<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
    }
    .container {
        max-width: 600px;
        margin: 50px auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    h1 {
        text-align: center;
    }
    .bid-form {
        margin-top: 20px;
    }
    .form-group {
        margin-bottom: 20px;
    }
    label {
        font-weight: bold;
    }
    input[type="text"] {
        width: 100%;
        padding: 10px;
        border-radius: 4px;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }
    input[type="submit"] {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 4px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
    }
    input[type="submit"]:hover {
        background-color: #0056b3;
    }

    /* Blinking Animation */
    .blinking-text {
        font-size: 18px;
        text-align: center;
        animation: blink 1s infinite;
    }
</style>
    <style>
        table {
            width: 100%; /* Make the table fill the entire container */
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 12px; /* Increase padding for a wider appearance */
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
    </style>
    <script>
        function formatCurrency(input) {
            // Remove non-numeric characters and leading zeros
            let value = input.value.replace(/[^\d]/g, '').replace(/^0+/, '');

            // Check if the input is not empty
            if (value !== '') {
                // Format the number with periods for thousands separator
                value = value.replace(/\B(?=(\d{3})+(?!\d))/g, '.');

                // Update the input value
                input.value = value;
            }
        }
    </script>
    <script>
        function enforceMinValue(input) {
            let value = parseInt(input.value.replace(/\./g, ''));
            if (value < 30000) {
                input.value = '30000';
            }
        }
    </script>
    <partial name="HeaderInclude" />
</head>
<body>
    <partial name="BodyInclude" />

    <div class="container">
        <h1>Set Your Bid Price</h1>
        
        <form class="bid-form" asp-action="HandleSendBidPrice" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label for="bidAmount">Bid Amount :</label>
                <input type="text" min="0" class="form-control" id="bidAmount" name="bidAmount" placeholder="Enter amount in VND" oninput="enforceMinValue(this);formatCurrency(this)" required>
                @* <input type="number" id="bidAmount" name="bidAmount" placeholder="Enter your bid amount" required> *@
            </div>
            <input type="submit" value="Next">
        </form>
        <p class="blinking-text">Top 1 - Top 5</p>
        <div id="tab-5" class="tab-pane fade show p-0">
            <table>
                <thead>
                    <tr>
                        <th>Recruiter</th>
                        <th>Bid Price</th>
                        <th>Date Line</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OnlineRecruitments)
                    {
                        <tr>
                            <td>@item.RecruiterName</td>
                            <td>@string.Format("{0:0,0} VND", item.BidPrice)</td>
                            <td>@item.PostTime.ToString("dd/MM/yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
         
        </div>
        
    </div>
</body>
</html>

